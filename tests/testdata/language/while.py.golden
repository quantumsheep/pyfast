Code with transformations:
while 1 == 2:
    pass
while 1 == 2:
    pass
else:
    pass

--------------------------------------------------------------------------------
AST:
program
├── file: SourceFile
│   └── filename: "tests/testdata/language/while.py"
└── statements: MultipleStatementAST
    └── statements
        ├── 0: WhileStatementAST
        │   ├── condition: BinaryExpressionAST
        │   │   ├── left: NumberLiteralExpressionAST
        │   │   │   └── value: 1
        │   │   ├── operator: "=="
        │   │   └── right: NumberLiteralExpressionAST
        │   │       └── value: 2
        │   ├── body: MultipleStatementAST
        │   │   └── statements
        │   │       └── 0: PassStatementAST
        │   └── else_body: None
        └── 1: WhileStatementAST
            ├── condition: BinaryExpressionAST
            │   ├── left: NumberLiteralExpressionAST
            │   │   └── value: 1
            │   ├── operator: "=="
            │   └── right: NumberLiteralExpressionAST
            │       └── value: 2
            ├── body: MultipleStatementAST
            │   └── statements
            │       └── 0: PassStatementAST
            └── else_body: MultipleStatementAST
                └── statements
                    └── 0: PassStatementAST


--------------------------------------------------------------------------------
IR:
; ModuleID = '<string>'
source_filename = "<string>"
target triple = "unknown-unknown-unknown"

define i32 @main() {
entry:
  br label %entry.while.cond

entry.while.cond:                                 ; preds = %entry.while.body, %entry
  %.3 = icmp eq i32 1, 2
  br i1 %.3, label %entry.while.body, label %entry.while.end

entry.while.body:                                 ; preds = %entry.while.cond
  br label %entry.while.cond

entry.while.end:                                  ; preds = %entry.while.cond
  br label %entry.while.end.while.cond

entry.while.end.while.cond:                       ; preds = %entry.while.end.while.body, %entry.while.end
  %.7 = icmp eq i32 1, 2
  br i1 %.7, label %entry.while.end.while.body, label %entry.while.end.while.else

entry.while.end.while.body:                       ; preds = %entry.while.end.while.cond
  br label %entry.while.end.while.cond

entry.while.end.while.else:                       ; preds = %entry.while.end.while.cond
  br label %entry.while.end.while.end

entry.while.end.while.end:                        ; preds = %entry.while.end.while.else
  ret i32 0
}
